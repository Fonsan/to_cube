<!DOCTYPE html>
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title><%= title %></title>
<style>
body {
  font-family: "Helvetica Neue", Helvetica, sans-serif;
  margin: 30px auto;
  width: 1440px;
  position: relative;
}

header {
  padding: 6px 0;
}

.group {
  margin-bottom: 1em;
}

.axis {
  font: 10px sans-serif;
  position: fixed;
  pointer-events: none;
  z-index: 2;
}

.axis text {
  -webkit-transition: fill-opacity 250ms linear;
}

.axis path {
  display: none;
}

.axis line {
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis.top {
  background-image: linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
  background-image: -o-linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
  background-image: -moz-linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
  background-image: -webkit-linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
  background-image: -ms-linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
  top: 0px;
  padding: 0 0 24px 0;
}

.axis.bottom {
  background-image: linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
  background-image: -o-linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
  background-image: -moz-linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
  background-image: -webkit-linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
  background-image: -ms-linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
  bottom: 0px;
  padding: 24px 0 0 0;
}

.horizon {
  border-bottom: solid 1px #000;
  overflow: hidden;
  position: relative;
}

.horizon {
  border-top: solid 1px #000;
  border-bottom: solid 1px #000;
}

.horizon + .horizon {
  border-top: none;
}

.horizon canvas {
  display: block;
}

.horizon .title,
.horizon .value {
  bottom: 0;
  line-height: 30px;
  margin: 0 6px;
  position: absolute;
  text-shadow: 0 1px 0 rgba(255,255,255,.5);
  white-space: nowrap;
}

.horizon .title {
  left: 0;
}

.horizon .value {
  right: 0;
}

.line {
  background: #000;
  opacity: .2;
  z-index: 2;
}

@media all and (max-width: 1439px) {
  body { margin: 0px auto; }
  .axis { position: static; }
  .axis.top, .axis.bottom { padding: 0; }
}

</style>
<%= javascripts %>
</head>
<body>
<script>

// var hour = 1000 * 60 * 60
// var rollup = hour;

var config = <%= chart_config.to_json %>;
console.log(config)
var context = cubism.context().step(config.rollup);
//     
// // var getValue = function(pair, time) {
// //     var entry = data[pair]
// //     time -= time % rollup
// //     var offset = (time - entry.start_time) / rollup
// //     var result = entry.index[offset]
// //     return result;
// // }
function createSeries(x) {
    var entry = config.series[x];
    var values = [],
        last;
    return context.metric(function (start, stop, step, callback) {
        start = +start;
        stop = +stop;
        console.log(start, stop, step, entry, config)
        var offset = (start - config.startTime) / step;
        var pre = [];
        if (offset < 0) {
            pre = new Array(-offset);
        }
        var startSlice = 0;
        if (offset > 0) {
            startSlice = offset;
        }
        var size = (stop - start) / step;
        var values = entry.data.slice(startSlice)
        var result = pre.concat(values)
        callback(null, result);
    }, x);
}
d3.select("body").selectAll(".axis")
    .data(["top", "bottom"])
    .enter().append("div")
    .attr("class", function (d) { return d + " axis"; })
    .each(function (d) { d3.select(this).call(context.axis().ticks(12).orient(d)); });

d3.select("body").append("div")
    .attr("class", "rule")
    .call(context.rule());
d3.select("body").selectAll(".horizon")
    .data(d3.range(0, config.series.length).map(createSeries))
    .enter().insert("div", ".bottom")
    .attr("class", "horizon")
    .call(context.horizon().title(function (i, d) {
        return config.series[i].name;
    }).height(100))


context.on("focus", function (i) {
    d3.selectAll(".value").style("right", i == null ? null : context.size() - i + "px");
});

</script>